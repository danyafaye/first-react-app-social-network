{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","isOwner","savePhoto","Preloader","className","s","descriptionBlock","src","photos","large","userPhoto","mainPhoto","type","target","files","leWngth","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","prevProps","prevState","snapshot","refreshProfile","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8e6c023b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1NHbA\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1JN3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3cwuF\",\"posts\":\"MyPosts_posts__gRCeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Q3VN\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                    onBlur={deactivateEditMode} autoFocus={true}\r\n                       value={status}\r\n                ></input>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/users.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.leWngth){\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\"\r\n                validate={[required, maxLength10]} placeholder=\"Post message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm\r\n({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostCreator(newPostText))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile, getStatus,\r\n        updateStatus, savePhoto\r\n    }),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}